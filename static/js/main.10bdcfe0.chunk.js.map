{"version":3,"sources":["components/Header.tsx","components/formSearch/FormSearch.tsx","components/modalAdd/ModalAdd.tsx","components/tableData/TableData.tsx","components/Student.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","style","fontSize","Component","RangePicker","DatePicker","FormSearch","props","onChange","e","setState","tempValue","currentTarget","value","buttonSearch","onChangeDate","startDate","endDate","StartDate","EndDate","buttonFilter","state","span","placeholder","allowClear","size","enterButton","onSearch","text","display","marginLeft","format","this","type","onClick","config","rules","required","message","Option","Select","ModalEdit","formRef","React","createRef","resolver","showModal","toogle","student","a","undefined","changed","Promise","resolve","reject","current","resetFields","isModalVisible","setTimeout","setFieldsValue","moment","DateOfBirth","saveItem","dataInput","validateFields","handleCancel","data","isEdit","title","MSSV","visible","onOk","onCancel","ref","labelCol","wrapperCol","layout","Item","name","label","marginBottom","TableData","modalRef","addItem","dataStd","itemStudent","push","items","localStorage","setItem","JSON","stringify","editItem","newData","Name","Gender","Teacher","ClassName","columns","dataIndex","key","render","record","color","EditOutlined","placement","onConfirm","deleteStudent","DeleteOutlined","float","marginRight","marginTop","PlusOutlined","dataSource","StudentData","App","load","dt","getItem","dataStorage","parse","students","search","textSearch","results","forEach","indexOf","includes","searchByDate","isBetween","tempData","filter","studentObj","className","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.10bdcfe0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Divider } from 'antd';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <Divider style ={{fontSize : 48}}>\r\n                <h2>Quản lý sinh viên</h2>\r\n            </Divider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Row, Col, DatePicker, Button } from 'antd';\r\nimport './FormSearch.css';\r\nimport Search from 'antd/lib/input/Search';\r\nimport moment from 'moment';\r\nimport { RangeValue } from 'rc-picker/lib/interface';\r\nconst { RangePicker } = DatePicker;\r\n\r\ninterface FormSearchProps {\r\n    buttonSearch: Function,\r\n    buttonFilter: Function\r\n}\r\n\r\ninterface FormSearchStates {\r\n    tempValue: string,\r\n    StartDate?: moment.Moment,\r\n    EndDate?: moment.Moment\r\n\r\n}\r\n\r\nclass FormSearch extends Component<FormSearchProps, FormSearchStates> {\r\n\r\n    constructor(props: FormSearchProps) {\r\n        super(props);\r\n        this.state = {\r\n            tempValue: '',\r\n        }\r\n    }\r\n    onChange = (e: React.FormEvent<HTMLInputElement>): void => {\r\n        this.setState({\r\n            tempValue: e.currentTarget.value\r\n        })\r\n        this.props.buttonSearch(e.currentTarget.value)\r\n    }\r\n    onChangeDate=(value:RangeValue<any>)=>{\r\n        const startDate = (value?.[0])\r\n        const endDate = (value?.[1])\r\n        this.setState({\r\n            StartDate: startDate,\r\n            EndDate: endDate\r\n        })\r\n        this.props.buttonFilter(startDate, endDate)\r\n    }\r\n   \r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col span={15}>\r\n                        <Search\r\n                            placeholder=\"input search text\"\r\n                            allowClear\r\n                            size=\"large\"\r\n                            enterButton\r\n                            onSearch={(text: string) => this.props.buttonSearch(this.state.tempValue)}\r\n                            onChange={(e) => this.onChange(e)}\r\n                        />\r\n                    </Col>\r\n                    <Col span={8} style={{ display: \"flex\", marginLeft: \"10px\" }}>\r\n                        <RangePicker \r\n                            format=\"YYYY/MM/DD\"\r\n                            onChange={this.onChangeDate}\r\n                        />\r\n                        <Button type=\"primary\" onClick ={() => this.props.buttonFilter(this.state.StartDate, this.state.EndDate)}>Filter</Button>\r\n                       \r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormSearch;","import React, { Component } from 'react';\r\nimport { Modal, DatePicker, Select } from 'antd';\r\nimport './ModalAdd.css';\r\nimport { FormProps, FormInstance } from 'antd/lib/form';\r\nimport { Form, Input, } from 'antd';\r\nimport { IStudent } from '../Student';\r\nimport moment, { Moment } from 'moment';\r\n\r\n\r\nconst config = {\r\n  rules: [{ type: 'object' as const, required: true, message: 'Please select time!' }],\r\n};\r\n\r\nconst { Option } = Select;\r\ninterface ModalEditProps {\r\n\r\n}\r\n\r\ninterface ModalEditStates {\r\n  isModalVisible: boolean,\r\n  data: {},\r\n  changed: boolean,\r\n  isEdit?: boolean,\r\n  student?: IStudent\r\n}\r\n\r\nexport interface Resolver {\r\n  changed: boolean,\r\n  data?: IStudent,\r\n}\r\n\r\nexport interface ModalData extends IStudent {\r\n  DatePicker: Moment;\r\n}\r\n\r\n\r\nclass ModalEdit extends Component<ModalEditProps, ModalEditStates> {\r\n  formRef: React.RefObject<FormInstance> = React.createRef();\r\n  resolver!: (resolver: Resolver) => void;\r\n  constructor(props: ModalEditProps) {\r\n    super(props);\r\n    this.state = {\r\n      isModalVisible: false,\r\n      data: {},\r\n      changed: false,\r\n      isEdit: false\r\n    }\r\n  }\r\n\r\n  showModal = async (toogle: boolean, student?: IStudent) => {\r\n    //reset data\r\n    await this.setState({ student: undefined, changed: false })\r\n    return new Promise<Resolver>((resolve, reject) => {\r\n      this.formRef?.current?.resetFields()\r\n      this.setState({ isModalVisible: toogle });\r\n\r\n      setTimeout(() => {\r\n        this.formRef?.current?.setFieldsValue({ ...student, DatePicker: moment(student?.DateOfBirth, \"MM/DD/YYYY\") })\r\n      })\r\n      this.resolver = resolve;\r\n    });\r\n  };\r\n\r\n  saveItem = async () => {\r\n    let dataInput = null;\r\n    try {\r\n      dataInput = (await this.formRef?.current?.validateFields()) as ModalData;\r\n      dataInput.DateOfBirth = dataInput.DatePicker.format(\"MM/DD/YYYY\");\r\n      this.formRef.current?.resetFields()\r\n      await this.setState({ changed: true, student: dataInput })\r\n      this.handleCancel()\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      isModalVisible: false\r\n    })\r\n    const resolver: Resolver = {\r\n      changed: this.state.changed,\r\n      data: this.state.student\r\n    };\r\n    this.resolver(resolver);\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal title={this.state.student?.MSSV !== '' ? 'Thêm sinh viên' : \"Cập nhật thông tin sinh viên\"} visible={this.state.isModalVisible} onOk={() => this.saveItem()} onCancel={() => this.handleCancel()}>\r\n          <Form ref={this.formRef} labelCol={{ span: 7 }} wrapperCol={{ span: 17 }} layout=\"horizontal\">\r\n            <Form.Item name='MSSV' label=\"MSSV\" rules={[{ required: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"Name\" label=\"Name\" rules={[{ required: true }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"Gender\" label=\"Gender\" rules={[{ required: true }]} style={{ marginBottom: '10px' }}>\r\n              <Select\r\n                placeholder=\"Select a option\"\r\n                allowClear\r\n              >\r\n                <Option value=\"Male\">Male</Option>\r\n                <Option value=\"Female\">Female</Option>\r\n                <Option value=\"Other\">Other</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item name=\"DatePicker\" label=\"DateOfBirth\" {...config} style={{ marginBottom: \"10px\" }}>\r\n              <DatePicker />\r\n            </Form.Item>\r\n            <Form.Item name=\"ClassName\" label=\"ClassName\" rules={[{ required: true }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"Teacher\" label=\"Teacher\" rules={[{ required: true }]} >\r\n              <Input />\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalEdit;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Table, Divider, Button, Popconfirm } from 'antd';\r\nimport './TableData.css'\r\nimport { DeleteOutlined, EditOutlined,PlusOutlined } from '@ant-design/icons';\r\nimport { IStudent } from '../Student';\r\nimport ModalAdd, { Resolver } from '../modalAdd/ModalAdd';\r\nimport { thisExpression } from '@babel/types';\r\n\r\n\r\ninterface TableDataProps {\r\n  dataStd: IStudent[];\r\n  deleteStudent: Function,\r\n\r\n}\r\ninterface TableDataState {\r\n  items: IStudent[];\r\n\r\n\r\n}\r\n\r\nclass TableData extends Component<TableDataProps, TableDataState> {\r\n  modalRef: React.RefObject<ModalAdd> = React.createRef();\r\n  constructor(props: TableDataProps) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n    }\r\n  }\r\n\r\n  addItem = async () => {\r\n    const { dataStd } = this.props;\r\n    const resolver = await this.modalRef.current?.showModal(true,)\r\n    \r\n    const itemStudent = (resolver as Resolver).data\r\n    itemStudent && dataStd.push(itemStudent);\r\n    this.setState({\r\n      items: dataStd\r\n    })\r\n    localStorage.setItem('studentData',JSON.stringify(this.state.items))\r\n  }\r\n  editItem = async (student:IStudent) => {\r\n    const { dataStd } = this.props;\r\n    const resolver = await this.modalRef.current?.showModal(true,student)\r\n    if(resolver?.changed){\r\n      const newData = {...resolver.data} \r\n\r\n      student.MSSV = newData.MSSV as string\r\n      student.Name = newData.Name as string\r\n      student.Gender = newData.Gender as string\r\n      student.DateOfBirth = newData.DateOfBirth as string\r\n      student.Teacher = newData.Teacher as string\r\n      student.ClassName = newData.ClassName as string\r\n\r\n    }\r\n    this.setState({\r\n      items: dataStd\r\n    })\r\n    localStorage.setItem('studentData',JSON.stringify(this.state.items))\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: 'MSSV',\r\n        dataIndex: 'MSSV',\r\n        key: 'MSSV',\r\n      },\r\n      {\r\n        title: 'Name',\r\n        dataIndex: 'Name',\r\n        key: 'Name',\r\n      },\r\n      {\r\n        title: 'Gender',\r\n        dataIndex: 'Gender',\r\n        key: 'Gender',\r\n      },\r\n      {\r\n        title: 'Date of Birth',\r\n        dataIndex: 'DateOfBirth',\r\n        key: 'DateOfBirth',\r\n      },\r\n      {\r\n        title: 'Class name',\r\n        dataIndex: 'ClassName',\r\n        key: 'className',\r\n      },\r\n      {\r\n        title: 'Teacher',\r\n        dataIndex: 'Teacher',\r\n        key: 'teacher',\r\n      },\r\n      {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (record: IStudent) =>\r\n          <span>\r\n            <a style={{ color: \"green\" }} onClick={() =>{this.editItem(record)}}><EditOutlined />Edit</a>\r\n            <Divider type=\"vertical\" />\r\n            <Popconfirm placement=\"top\" title=\"Are you sure to delete this student?\" onConfirm={() => this.props.deleteStudent(record)}>\r\n              <a style={{ color: \"red\" }}><DeleteOutlined />Delete</a>\r\n            </Popconfirm>\r\n          </span>\r\n      }\r\n    ]\r\n    return (\r\n      <>\r\n        <div style={{ float: \"right\", marginRight: \"44px\", marginTop: \"10px\", display: \"inline-block\", }}>\r\n          <Button type=\"primary\" onClick={() => this.addItem()}>\r\n          <PlusOutlined />\r\n            Add student\r\n          </Button>\r\n        </div>\r\n        <Table columns={columns} dataSource={[...this.props.dataStd]} />\r\n        <ModalAdd ref={this.modalRef} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableData;\r\n\r\n\r\n","\r\nexport interface IStudent{\r\n    MSSV: string;\r\n    Name: string;\r\n    DateOfBirth: string;\r\n    Gender: string,\r\n    ClassName: string;\r\n    Teacher: string;\r\n}\r\nexport const StudentData: IStudent[] = [\r\n    {\r\n        MSSV: \"001\",\r\n        Name: \"nguyen thi admin\",\r\n        DateOfBirth: \"10/23/1999\",\r\n        Gender: \"Female\",\r\n        ClassName: \"Giải tích I\",\r\n        Teacher: \"nguyen thi anh\"\r\n    },\r\n    {\r\n        MSSV: \"002\",\r\n        Name: \"nguyen van chuoi\",\r\n        DateOfBirth: \"09/23/1996\",\r\n        Gender: \"Male\",\r\n        ClassName: \"Giải tích II\",\r\n        Teacher: \"nguyen van hai\"\r\n    },\r\n    {\r\n        MSSV: \"003\",\r\n        Name: \"dang thi khoai\",\r\n        DateOfBirth: \"11/22/1998\",\r\n        Gender: \"Female\",\r\n        ClassName: \"Giải tích II\",\r\n        Teacher: \"nguyen van hai\"\r\n    },\r\n    {\r\n        MSSV: \"004\",\r\n        Name: \"hoang van binh\",\r\n        DateOfBirth: \"02/23/1994\",\r\n        Gender: \"Male\",\r\n        ClassName: \"Giải tích III\",\r\n        Teacher: \"dang hai dang\"\r\n    },\r\n    {\r\n        MSSV: \"009\",\r\n        Name: \"nguyen duy thai\",\r\n        DateOfBirth: \"06/23/1994\",\r\n        Gender: \"Male\",\r\n        ClassName: \"Giải tích III\",\r\n        Teacher: \"dang hai dang\"\r\n    },\r\n    {\r\n        MSSV: \"010\",\r\n        Name: \"pham phuong nhi\",\r\n        DateOfBirth: \"09/30/1994\",\r\n        Gender: \"Male\",\r\n        ClassName: \"Giải tích III\",\r\n        Teacher: \"dang hai dang\"\r\n    },\r\n    {\r\n        MSSV: \"005\",\r\n        Name: \"kieu thi ha\",\r\n        DateOfBirth: \"05/25/1995\",\r\n        Gender: \"Female\",\r\n        ClassName: \"Phương pháp tính\",\r\n        Teacher: \"hoang nam\"\r\n        \r\n    },\r\n    {\r\n        MSSV: \"006\",\r\n        Name: \"nguyen van a\",\r\n        DateOfBirth: \"07/24/1992\",\r\n        Gender: \"Male\",\r\n        ClassName: \"Phương pháp tính\",\r\n        Teacher: \"hoang nam\"\r\n    },\r\n    {\r\n        MSSV: \"007\",\r\n        Name: \"pham thi b\",\r\n        DateOfBirth: \"12/22/1995\",\r\n        Gender: \"Female\",\r\n        ClassName: \"Phương pháp tính\",\r\n        Teacher: \"hoang nam\"\r\n    }\r\n]","import './App.css';\nimport 'antd/dist/antd.css';\nimport Header from './components/Header';\nimport FormSearch from './components/formSearch/FormSearch';\nimport React from 'react';\nimport TableData from './components/tableData/TableData';\nimport './components/Student'\nimport { StudentData, IStudent } from './components/Student';\nimport moment from 'moment';\n\ninterface AppProps {\n}\n\ninterface AppState {\n  students: IStudent[],\n  studentObj: {}\n}\nclass App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n    this.state = {\n      students: [],\n      studentObj: {}\n    }\n  }\n  componentWillMount() {\n    if (localStorage.getItem('studentData') === null) {\n      localStorage.setItem('studentData', JSON.stringify(StudentData));\n    } else {\n      localStorage.getItem('studentData')\n    }\n  }\n\n  load = () => {\n    const dt = localStorage.getItem('studentData') as string;\n    const dataStorage = JSON.parse(dt)\n    this.setState({\n      students: dataStorage\n    })\n\n  }\n\n  componentDidMount() {\n    this.load()\n  }\n\n  // tìm kiếm sinh viên\n  search = (textSearch: string) => {\n    var results: IStudent[] = [];\n    if (textSearch) {\n      this.state.students.forEach((student) => {\n        if (student.Name.indexOf(textSearch) !== -1) {\n          results.push(student);\n        }\n        else if (student.MSSV.indexOf(textSearch) !== -1) {\n          results.push(student)\n        }\n        else if (student.Gender.includes(textSearch)) {\n          results.push(student)\n        }\n      });\n      this.setState({\n        students: results,\n      });\n    } else {\n      this.load()\n\n    }\n  }\n  searchByDate = (startDate: moment.Moment, endDate: moment.Moment) => {\n    var results: IStudent[] = [];\n    if(startDate !== undefined && endDate !== undefined){\n      this.state.students.forEach((student) => {\n      const compairDate = moment(student.DateOfBirth)\n      if (compairDate.isBetween(startDate, endDate)) {\n        results.push(student)\n      }\n      })\n      this.setState({\n        students: results\n      })\n    }else{\n      this.load()\n    }\n    \n  }\n  // Xóa sinh viên \n  deleteStudent = (student: IStudent) => {\n    const tempData = this.state.students.filter((e) => e.MSSV !== student.MSSV);\n    localStorage.setItem('studentData', JSON.stringify(tempData))\n\n    this.setState({\n      students: tempData\n    })\n  }\n  render() {\n\n    const { students } = this.state\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <FormSearch buttonSearch={(textSearch: string) => this.search(textSearch)} buttonFilter={(startDate: moment.Moment, endDate: moment.Moment) => { this.searchByDate(startDate, endDate) }} />\n        {students.length > 0 && <TableData dataStd={students} deleteStudent={(student: IStudent) => this.deleteStudent(student)} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}